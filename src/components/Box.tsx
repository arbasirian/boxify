import React from "react";
import { BoxProps } from "../types";
import styles from "./Box.module.css";
import { cx } from "../utils";

export const Box: React.FC<BoxProps> = ({
  children,
  className,
  style,
  as = "div",
  // Extract CSS props to prevent them from being passed to DOM
  display,
  position,
  top,
  right,
  bottom,
  left,
  zIndex,
  width,
  height,
  minWidth,
  minHeight,
  maxWidth,
  maxHeight,
  margin,
  marginTop,
  marginRight,
  marginBottom,
  marginLeft,
  padding,
  paddingTop,
  paddingRight,
  paddingBottom,
  paddingLeft,
  border,
  borderRadius,
  borderColor,
  borderStyle,
  borderWidth,
  backgroundColor,
  backgroundImage,
  fontSize,
  fontWeight,
  textAlign,
  color,
  lineHeight,
  letterSpacing,
  textDecoration,
  textTransform,
  fontFamily,
  fontStyle,
  whiteSpace,
  textOverflow,
  flexDirection,
  justifyContent,
  alignItems,
  flexWrap,
  flex,
  gridTemplateColumns,
  gridTemplateRows,
  gridTemplateAreas,
  gridArea,
  gridColumn,
  gridRow,
  gridColumnStart,
  gridColumnEnd,
  gridRowStart,
  gridRowEnd,
  gridAutoFlow,
  gridAutoColumns,
  gridAutoRows,
  gap,
  transform,
  transition,
  overflow,
  overflowX,
  overflowY,
  boxShadow,
  cursor,
  // Extract responsive props
  tablet,
  desktop,
  // Extract htmlFor prop
  htmlFor,
  ...restProps
}) => {
  const Component = as as React.ElementType;

  return (
    <Component
      className={cx(
        styles.box,
        className,
        display && styles.bxDisplay,
        position && styles.bxPosition,
        top && styles.bxTop,
        right && styles.bxRight,
        bottom && styles.bxBottom,
        left && styles.bxLeft,
        zIndex && styles.bxZIndex,
        width && styles.bxWidth,
        height && styles.bxHeight,
        minWidth && styles.bxMinWidth,
        minHeight && styles.bxMinHeight,
        maxWidth && styles.bxMaxWidth,
        maxHeight && styles.bxMaxHeight,
        margin && styles.bxMargin,
        marginTop && styles.bxMarginTop,
        marginRight && styles.bxMarginRight,
        marginBottom && styles.bxMarginBottom,
        marginLeft && styles.bxMarginLeft,
        padding && styles.bxPadding,
        paddingTop && styles.bxPaddingTop,
        paddingRight && styles.bxPaddingRight,
        paddingBottom && styles.bxPaddingBottom,
        paddingLeft && styles.bxPaddingLeft,
        border && styles.bxBorder,
        borderRadius && styles.bxBorderRadius,
        borderColor && styles.bxBorderColor,
        borderStyle && styles.bxBorderStyle,
        borderWidth && styles.bxBorderWidth,
        backgroundColor && styles.bxBackgroundColor,
        backgroundImage && styles.bxBackgroundImage,
        fontSize && styles.bxFontSize,
        fontWeight && styles.bxFontWeight,
        textAlign && styles.bxTextAlign,
        color && styles.bxColor,
        lineHeight && styles.bxLineHeight,
        letterSpacing && styles.bxLetterSpacing,
        textDecoration && styles.bxTextDecoration,
        textTransform && styles.bxTextTransform,
        fontFamily && styles.bxFontFamily,
        fontStyle && styles.bxFontStyle,
        whiteSpace && styles.bxWhiteSpace,
        textOverflow && styles.bxTextOverflow,
        flexDirection && styles.bxFlexDirection,
        justifyContent && styles.bxJustifyContent,
        alignItems && styles.bxAlignItems,
        flexWrap && styles.bxFlexWrap,
        flex && styles.bxFlex,
        gridTemplateColumns && styles.bxGridTemplateColumns,
        gridTemplateRows && styles.bxGridTemplateRows,
        gridTemplateAreas && styles.bxGridTemplateAreas,
        gridArea && styles.bxGridArea,
        gridColumn && styles.bxGridColumn,
        gridRow && styles.bxGridRow,
        gridColumnStart && styles.bxGridColumnStart,
        gridColumnEnd && styles.bxGridColumnEnd,
        gridRowStart && styles.bxGridRowStart,
        gridRowEnd && styles.bxGridRowEnd,
        gridAutoFlow && styles.bxGridAutoFlow,
        gridAutoColumns && styles.bxGridAutoColumns,
        gridAutoRows && styles.bxGridAutoRows,
        gap && styles.bxGap,
        transform && styles.bxTransform,
        transition && styles.bxTransition,
        overflow && styles.bxOverflow,
        overflowX && styles.bxOverflowX,
        overflowY && styles.bxOverflowY,
        boxShadow && styles.bxBoxShadow,
        cursor && styles.bxCursor
      )}
      style={{
        ...style,
        ...{
          // Display
          "--display": display,
          "--display-tablet": tablet?.display,
          "--display-desktop": desktop?.display,

          // Layout
          "--position": position,
          "--position-tablet": tablet?.position,
          "--position-desktop": desktop?.position,
          "--top": top,
          "--top-tablet": tablet?.top,
          "--top-desktop": desktop?.top,
          "--right": right,
          "--right-tablet": tablet?.right,
          "--right-desktop": desktop?.right,
          "--bottom": bottom,
          "--bottom-tablet": tablet?.bottom,
          "--bottom-desktop": desktop?.bottom,
          "--left": left,
          "--left-tablet": tablet?.left,
          "--left-desktop": desktop?.left,
          "--z-index": zIndex,
          "--z-index-tablet": tablet?.zIndex,
          "--z-index-desktop": desktop?.zIndex,

          // Box Model
          "--width": width,
          "--width-tablet": tablet?.width,
          "--width-desktop": desktop?.width,
          "--height": height,
          "--height-tablet": tablet?.height,
          "--height-desktop": desktop?.height,
          "--min-width": minWidth,
          "--min-width-tablet": tablet?.minWidth,
          "--min-width-desktop": desktop?.minWidth,
          "--min-height": minHeight,
          "--min-height-tablet": tablet?.minHeight,
          "--min-height-desktop": desktop?.minHeight,
          "--max-width": maxWidth,
          "--max-width-tablet": tablet?.maxWidth,
          "--max-width-desktop": desktop?.maxWidth,
          "--max-height": maxHeight,
          "--max-height-tablet": tablet?.maxHeight,
          "--max-height-desktop": desktop?.maxHeight,

          // Spacing
          "--margin": margin,
          "--margin-tablet": tablet?.margin,
          "--margin-desktop": desktop?.margin,
          "--margin-top": marginTop,
          "--margin-top-tablet": tablet?.marginTop,
          "--margin-top-desktop": desktop?.marginTop,
          "--margin-right": marginRight,
          "--margin-right-tablet": tablet?.marginRight,
          "--margin-right-desktop": desktop?.marginRight,
          "--margin-bottom": marginBottom,
          "--margin-bottom-tablet": tablet?.marginBottom,
          "--margin-bottom-desktop": desktop?.marginBottom,
          "--margin-left": marginLeft,
          "--margin-left-tablet": tablet?.marginLeft,
          "--margin-left-desktop": desktop?.marginLeft,
          "--padding": padding,
          "--padding-tablet": tablet?.padding,
          "--padding-desktop": desktop?.padding,
          "--padding-top": paddingTop,
          "--padding-top-tablet": tablet?.paddingTop,
          "--padding-top-desktop": desktop?.paddingTop,
          "--padding-right": paddingRight,
          "--padding-right-tablet": tablet?.paddingRight,
          "--padding-right-desktop": desktop?.paddingRight,
          "--padding-bottom": paddingBottom,
          "--padding-bottom-tablet": tablet?.paddingBottom,
          "--padding-bottom-desktop": desktop?.paddingBottom,
          "--padding-left": paddingLeft,
          "--padding-left-tablet": tablet?.paddingLeft,
          "--padding-left-desktop": desktop?.paddingLeft,

          // Border
          "--border": border,
          "--border-tablet": tablet?.border,
          "--border-desktop": desktop?.border,
          "--border-radius": borderRadius,
          "--border-radius-tablet": tablet?.borderRadius,
          "--border-radius-desktop": desktop?.borderRadius,
          "--border-color": borderColor,
          "--border-color-tablet": tablet?.borderColor,
          "--border-color-desktop": desktop?.borderColor,
          "--border-style": borderStyle,
          "--border-style-tablet": tablet?.borderStyle,
          "--border-style-desktop": desktop?.borderStyle,
          "--border-width": borderWidth,
          "--border-width-tablet": tablet?.borderWidth,
          "--border-width-desktop": desktop?.borderWidth,

          // Background
          "--background-color": backgroundColor,
          "--background-color-tablet": tablet?.backgroundColor,
          "--background-color-desktop": desktop?.backgroundColor,
          "--background-image": backgroundImage,
          "--background-image-tablet": tablet?.backgroundImage,
          "--background-image-desktop": desktop?.backgroundImage,

          // Typography
          "--font-size": fontSize,
          "--font-size-tablet": tablet?.fontSize,
          "--font-size-desktop": desktop?.fontSize,
          "--font-weight": fontWeight,
          "--font-weight-tablet": tablet?.fontWeight,
          "--font-weight-desktop": desktop?.fontWeight,
          "--text-align": textAlign,
          "--text-align-tablet": tablet?.textAlign,
          "--text-align-desktop": desktop?.textAlign,
          "--color": color,
          "--color-tablet": tablet?.color,
          "--color-desktop": desktop?.color,
          "--line-height": lineHeight,
          "--line-height-tablet": tablet?.lineHeight,
          "--line-height-desktop": desktop?.lineHeight,
          "--letter-spacing": letterSpacing,
          "--letter-spacing-tablet": tablet?.letterSpacing,
          "--letter-spacing-desktop": desktop?.letterSpacing,
          "--text-decoration": textDecoration,
          "--text-decoration-tablet": tablet?.textDecoration,
          "--text-decoration-desktop": desktop?.textDecoration,
          "--text-transform": textTransform,
          "--text-transform-tablet": tablet?.textTransform,
          "--text-transform-desktop": desktop?.textTransform,
          "--font-family": fontFamily,
          "--font-family-tablet": tablet?.fontFamily,
          "--font-family-desktop": desktop?.fontFamily,
          "--font-style": fontStyle,
          "--font-style-tablet": tablet?.fontStyle,
          "--font-style-desktop": desktop?.fontStyle,
          "--white-space": whiteSpace,
          "--white-space-tablet": tablet?.whiteSpace,
          "--white-space-desktop": desktop?.whiteSpace,
          "--text-overflow": textOverflow,
          "--text-overflow-tablet": tablet?.textOverflow,
          "--text-overflow-desktop": desktop?.textOverflow,

          // Flexbox
          "--flex-direction": flexDirection,
          "--flex-direction-tablet": tablet?.flexDirection,
          "--flex-direction-desktop": desktop?.flexDirection,
          "--justify-content": justifyContent,
          "--justify-content-tablet": tablet?.justifyContent,
          "--justify-content-desktop": desktop?.justifyContent,
          "--align-items": alignItems,
          "--align-items-tablet": tablet?.alignItems,
          "--align-items-desktop": desktop?.alignItems,
          "--flex-wrap": flexWrap,
          "--flex-wrap-tablet": tablet?.flexWrap,
          "--flex-wrap-desktop": desktop?.flexWrap,
          "--flex": flex,
          "--flex-tablet": tablet?.flex,
          "--flex-desktop": desktop?.flex,

          // Grid
          "--grid-template-columns": gridTemplateColumns,
          "--grid-template-columns-tablet": tablet?.gridTemplateColumns,
          "--grid-template-columns-desktop": desktop?.gridTemplateColumns,
          "--grid-template-rows": gridTemplateRows,
          "--grid-template-rows-tablet": tablet?.gridTemplateRows,
          "--grid-template-rows-desktop": desktop?.gridTemplateRows,
          "--grid-template-areas": gridTemplateAreas,
          "--grid-template-areas-tablet": tablet?.gridTemplateAreas,
          "--grid-template-areas-desktop": desktop?.gridTemplateAreas,
          "--grid-area": gridArea,
          "--grid-area-tablet": tablet?.gridArea,
          "--grid-area-desktop": desktop?.gridArea,
          "--grid-column": gridColumn,
          "--grid-column-tablet": tablet?.gridColumn,
          "--grid-column-desktop": desktop?.gridColumn,
          "--grid-row": gridRow,
          "--grid-row-tablet": tablet?.gridRow,
          "--grid-row-desktop": desktop?.gridRow,
          "--grid-column-start": gridColumnStart,
          "--grid-column-start-tablet": tablet?.gridColumnStart,
          "--grid-column-start-desktop": desktop?.gridColumnStart,
          "--grid-column-end": gridColumnEnd,
          "--grid-column-end-tablet": tablet?.gridColumnEnd,
          "--grid-column-end-desktop": desktop?.gridColumnEnd,
          "--grid-row-start": gridRowStart,
          "--grid-row-start-tablet": tablet?.gridRowStart,
          "--grid-row-start-desktop": desktop?.gridRowStart,
          "--grid-row-end": gridRowEnd,
          "--grid-row-end-tablet": tablet?.gridRowEnd,
          "--grid-row-end-desktop": desktop?.gridRowEnd,
          "--grid-auto-flow": gridAutoFlow,
          "--grid-auto-flow-tablet": tablet?.gridAutoFlow,
          "--grid-auto-flow-desktop": desktop?.gridAutoFlow,
          "--grid-auto-columns": gridAutoColumns,
          "--grid-auto-columns-tablet": tablet?.gridAutoColumns,
          "--grid-auto-columns-desktop": desktop?.gridAutoColumns,
          "--grid-auto-rows": gridAutoRows,
          "--grid-auto-rows-tablet": tablet?.gridAutoRows,
          "--grid-auto-rows-desktop": desktop?.gridAutoRows,
          "--gap": gap,
          "--gap-tablet": tablet?.gap,
          "--gap-desktop": desktop?.gap,

          // Transform
          "--transform": transform,
          "--transform-tablet": tablet?.transform,
          "--transform-desktop": desktop?.transform,
          "--transition": transition,
          "--transition-tablet": tablet?.transition,
          "--transition-desktop": desktop?.transition,

          // Overflow
          "--overflow": overflow,
          "--overflow-tablet": tablet?.overflow,
          "--overflow-desktop": desktop?.overflow,
          "--overflow-x": overflowX,
          "--overflow-x-tablet": tablet?.overflowX,
          "--overflow-x-desktop": desktop?.overflowX,
          "--overflow-y": overflowY,
          "--overflow-y-tablet": tablet?.overflowY,
          "--overflow-y-desktop": desktop?.overflowY,

          // Additional CSS properties
          "--box-shadow": boxShadow,
          "--box-shadow-tablet": tablet?.boxShadow,
          "--box-shadow-desktop": desktop?.boxShadow,
          "--cursor": cursor,
          "--cursor-tablet": tablet?.cursor,
          "--cursor-desktop": desktop?.cursor,
        },
      }}
      htmlFor={htmlFor}
      {...restProps}
    >
      {children}
    </Component>
  );
};
